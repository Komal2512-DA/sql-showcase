Problem Statement:
Write a query that reports the buyers who have bought the product S8 but not an iPhone.

Result:
-Return the column 'buyer_id' and order the result table in ascending order.
-S8 and iPhone are products present in the Product table.
-Filters the results based on the product_name (i.e., S8, iPhone) as product_id might differ in the test cases.

-- Try this challenge influenced by Scaler’s problem sets.

Sales
| seller_id  | product_id  | buyer_id  | sale_date  | quantity | price |
| ---------- | ----------- | --------- | ---------- | -------- | ----- |
| 1          | 1           | 2         | 2019-01-21 | 2        | 2000  |
| 1          | 2           | 2         | 2019-02-17 | 1        | 800   |
| 2          | 3           | 1         | 2019-06-02 | 1        | 800   |
| 3          | 3           | 2         | 2019-05-13 | 2        | 2800  |

Product 
| product_id  | product_name  | unit_price  |
| ----------- | ------------- | ----------- |
| 1           | S8            | 1000        |
| 2           | G4            | 800         |
| 3           | iPhone        | 1400        |

Output : buyer_id 1 , The buyer with id 1 bought an S8 but did not buy an iPhone. The buyer with id 3 bought both.

Approach : 
- Join the table , so we can get the additional info i.e. product name .
- Filter using WHERE the product name is S8 , along with this we have to find out which user who bought S8 should not buy iphone .
- For the above scenario , use co-related query to connect the inner query with the outer query on the basis of buyer. 
- Whichever the buyer bought an S8 , that buyer should not buy an iphone , so that we use NOT EXISTS where buyer bought S8 , along with this if buyer exists who bought an iphone , exclude them .

- EXISTS (product_name != 'iPhone')
  “Is there any product that the buyer bought that is not an iPhone?”
  So even if the buyer also bought an iPhone, they’ll still be included, as long as they bought one non-iPhone too.
  Must have also bought something NOT 'iPhone'
- NOT EXISTS (product_name = 'iPhone')
  NOT EXISTS (product = 'iPhone') guarantees that buyer never bought iPhone.
  Must have NOT bought an iPhone at all.

Solution : 

SELECT DISTINCT  buyer_id
FROM Sales s 
JOIN Product p 
ON s.product_id = p.product_id
WHERE product_name = 'S8' and  NOT EXISTS ( SELECT 1
                                        FROM sales s1 
                                        JOIN Product p1 
                                        ON s1.product_id = p1.product_id
                                        WHERE product_name = 'iPhone' AND s.buyer_id = s1.buyer_id)
ORDER BY 1;
