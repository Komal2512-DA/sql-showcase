Problem : 
Write a query to report all the sessions that did not get shown any ads.

Result:
- Return the column 'session_id'
- Return the resultant table ordered by session_id in ascending order.
-- Try this challenge influenced by Scaler’s problem sets.

Playback                                                                                    Ads
| session_id  | customer_id  | start_time  | end_time  |                                    | ad_id  | customer_id  | timestamp |
| ----------- | ------------ | ----------- | --------- |                                    | ------ | ------------ | --------- |
| 1           | 1            | 1           | 5         |                                    | 1      | 1            | 5         |
| 2           | 1            | 15          | 23        |                                    | 2      | 2            | 17        |
| 3           | 2            | 10          | 12        |                                    | 3      | 2            | 20        |
| 4           | 2            | 17          | 28        |   
| 5           | 2            | 2           | 8         |  

Output : 
- The ad with ID 1 was shown to user 1 at time 5 while they were in session 1.
- The ad with ID 2 was shown to user 2 at time 17 while they were in session 4.
- The ad with ID 3 was shown to user 2 at time 20 while they were in session 4.
- We can see that sessions 1 and 4 had at least one ad.
- Sessions 2, 3, and 5 did not have any ads, so we return them.

Approach : 
-Select the column session_id from the Playback table.
- To get the details of the ads played in each session, we use left join and join the tables Playback and Ads using the customer_id column. 
-To check whether the Ad was shown to any user, the timestamp of the ad has to be between the start_time and end_time of the session, we check the same using the between and ‘and’ operators.
-Now, we filter the records of all the sessions that did not get shown any ads using the where clause where the customer_id is null.
-Use the order by clause to order the output based on the session_id column in ascending order.

Solution : 

SELECT session_id
FROM Playback p 
LEFT JOIN Ads a 
ON p.customer_id = a.customer_id AND a.timestamp BETWEEN start_time AND end_time
WHERE a.customer_id IS NULL
ORDER BY 1;
