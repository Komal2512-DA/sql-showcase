Problem Description:
Write a query to find the customer_id and customer_name of customers who bought products "Bread" and "Milk" but did not buy the product "Eggs".

Result:
-Return the columns customer_id and customer_name
-Return the output ordered by customer_name in ascending order
-- Got the idea from a Scaler session.

Customers                                   Orders 
| **customer_id**  | **customer_name**  |   | **order_id**  | **customer_id**  | **product_name**  |
| ---------------- | ------------------ | - | ------------- | ---------------- | ----------------- |
| 1                | Andrew             |   | 10            | 1                | Bread             |
| 2                | Erin               |   | 20            | 1                | Milk              |
| 3                |  Stanley           |   | 30            | 1                | Butter            |
                                            | 40            | 1                | Eggs              |
                                            | 50            | 2                | Bread             |
                                            | 60            | 2                | Milk              |
                                            | 70            | 3                | Butter            |

Output : Here, only the customer_id with id 2 bought Bread and Milk products but did not buy the Eggs.

Approach : 
- First filter out customer who bought bread , then milk and egg .
- Then filter them , include only those who bought bread and milk , exclude the egg one . 
- If exists , then retrieve customer id and its name .

Solution : 

SELECT customer_id , customer_name 
FROM customers 
WHERE customer_id IN (SELECT customer_id FROM orders WHERE product_name = 'Bread')
AND  customer_id IN (SELECT customer_id FROM orders WHERE product_name = 'Milk')
AND  customer_id NOT IN (SELECT customer_id FROM orders WHERE product_name = 'Eggs')
ORDER BY customer_name;
