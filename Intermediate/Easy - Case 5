ðŸ’¡ Problem Statement :
You are given a table called STATION with information about various cities and their geographic coordinates.
Your task is to write a SQL query that finds:
- The city with the shortest name (in terms of character count).
- The city with the longest name.
If multiple cities share the same name length, return the one that comes first alphabetically.
The output should include both the city name and the number of characters in it.

Station 
| Field   | Type         |
| ------- | ------------ |
| ID      | NUMBER       |
| CITY    | VARCHAR2(21) |
| STATE   | VARCHAR2(2)  |
| LAT_N   | NUMBER       |
| LONG_W  | NUMBER       |

-- This problem statement is inspired by Hackerrank .

Approach : 
- For executing the query which required shortest city name , do sorting of length of city name and if more than 1 city have same length , then sort by city name . 
- Use ORDER BY clause to sort the length of city in ASC , and then city and then use LIMIT 1 to get the name of city which are in top .
- Then fetch the whole output using SELECT * FROM table .
- For executing the query which required longest city name , do sorting of length of city name in Descending order and if more than 1 city have same length , then sort them by alphabetically .
- USE ORDER BY clause to sort the length of city in DESC , and then city and then use LIMIT 1 to get the name of city which are in top . 
- Then fetch the whole output using SELECT * FROM table .
- At the end , use UNION to get the desired output . 
Avoid : 
- Without using SELECT * FROM table , if you do union , ORDER BY clause won't work. 

Solution : 
SELECT * FROM (
        SELECT city , LENGTH(city) AS city_length
        FROM station 
        ORDER BY city_length, city
        LIMIT 1 ) x
UNION 
SELECT * FROM (
        SELECT city , LENGTH(city) AS city_length
        FROM station 
        ORDER BY city_length DESC , city
        LIMIT 1 ) y;
