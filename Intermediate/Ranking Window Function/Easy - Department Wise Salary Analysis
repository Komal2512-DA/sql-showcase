Problem Statement:
Write a query to calculate
- the row number and save it as 'emp_row_no',
- rank and save as 'emp_rank', and
- the dense rank of employees as 'emp_dense_rank'
based on the salary column in descending order within each department using the employees table.
-- The idea for this problem comes from Scaler.

Result:
Return the columns 'full_name' (first_name and last_name separated by space), 'department_id', 'salary', 'emp_row_no', 'emp_rank', and 'emp_dense_rank'.
Return the result ordered by department_id in ascending order and salary in descending order.

Approach : 
-The SELECT query will retrieve the concatenated full_name (combining the first_name and last_name columns), department_id, salary, and additional columns generated by window functions.
-uses the ROW_NUMBER() window function to assign a sequential row number to each employee within each department_id, based on the descending order of their salary. 
-uses the RANK() window function to calculate the rank of each employee within each department_id, based on the descending order of their salary.
-uses the DENSE_RANK() window function to calculate the dense rank of each employee within each department_id, based on the descending order of their salary.  The dense rank represents the unique position of each employee, considering ties, with the same department_id.
-Then  will first sort the result set by department_id in ascending order, and within each department, it will further sort by salary in descending order.

Solution : 

SELECT CONCAT(first_name, ' ', last_name) AS full_name, department_id, salary , 
    ROW_NUMBER() OVER (PARTITION BY department_id ORDER BY salary DESC) AS emp_row_no,
    RANK() OVER (PARTITION BY department_id ORDER BY salary DESC) AS emp_rank, 
    DENSE_RANK() OVER (PARTITION BY department_id ORDER BY salary DESC) AS emp_dense_rank
FROM employees 
ORDER BY department_id, salary DESC;
