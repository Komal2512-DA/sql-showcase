Problem : 
You are given a table named Functions with two integer columns: X and Y.
Your task is to find all symmetric pairs, i.e., pairs of rows such that:
- One row has values (X1, Y1)
- Another row has values (X2, Y2)
- And the condition X1 = Y2 AND X2 = Y1 holds
From these symmetric pairs:
- Only include those where X1 â‰¤ Y1 to avoid duplicates
- Output the result sorted by X in ascending order

Functions 
| Column | Type |
| ------ | ---- |
| X      | INT  |
| Y      | INT  |

-- This question is inspired from HackerRank. 

Approach : 
- Create CTE , which consists the data along with the row number .
- WHY ? row number , that is becaz when we join table with itself , then it replicated itself and table1 x an y is the same of table2 x and y .
- Add a ROW_NUMBER() column to every row so you can tell them apart even if the values are the same.
- Join the table with itself using the condition: t1.X = t2.Y and t1.Y = t2.X
- Ensure that t1.row_num <> t2.row_num so you're not matching the row with itself or getting duplicate pairs and t1.x should be less than or equal to t1.y.
- At the end , sort the data by t1.x;

Solution : 
WITH data AS (
    SELECT x, y , ROW_NUMBER() OVER (ORDER BY x) AS row_num
    FROM Functions
)
SELECT DISTINCT t1.x , t1.y
FROM data t1 
JOIN data t2 
ON t1.x = t2.y AND t2.x = t1.y AND t1.row_num <> t2.row_num
WHERE t1.x <= t1.y 
ORDER BY t1.x;
