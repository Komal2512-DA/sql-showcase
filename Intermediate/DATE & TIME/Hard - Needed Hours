Problem Description:
The task is to write a query to get the IDs of employees who did not meet the required monthly work hours.
The number of hours an employee worked can be calculated by summing up the number of minutes each employee worked in all of their sessions.
Also, round up the minutes for each session.
If the employee worked for 51 minutes and 2 seconds in a session, we consider it 52 minutes.
We can use CEIL() function to return the smallest integer value that is bigger than or equal to a number.
The result should be ordered by by employee_id in ascending order.
--  Try this challenge influenced by Scalerâ€™s problem sets.

| employees     |                          | logs     |                     |                         |                             |       | Sample Output                |
| ------------- | ------------------------ | -------- | ------------------- | ----------------------- | --------------------------- | ----- | ---------------------------- |
| employee_id   | needed_hours             |          | employee_id         | in_time                 | out_time                    |       | employee_id                  |
| ------------- | ------------------------ | -----    | --------------      | ----------------------- | --------------------------- | ----- | ---------------------------- |
| 1             | 20                       |          | 1                   | 2022-10-01 09:00:00     | 2022-10-01 17:00:00         |       | 2                            |
| 2             | 12                       |          | 1                   | 2022-10-06 09:05:04     | 2022-10-06 17:09:03         |       | 3                            |
| 3             | 2                        |          | 1                   | 2022-10-12 23:00:00     | 2022-10-13 03:00:01         |       |                              |
|               |                          |          | 2                   | 2022-10-29 12:00:00     | 2022-10-29 23:58:58         |       |                              |

Explaination : 
Employee 1:
  Worked for three sessions:
  On 2022-10-01, they worked for 8 hours.
  On 2022-10-06, they worked for 8 hours and 4 minutes.
  On 2022-10-12, they worked for 4 hours and 1 minute. Note that they worked through midnight.
  Employee 1 worked a total of 20 hours and 5 minutes across sessions and will not be deducted.
Employee 2:
  Worked for one session:
  On 2022-10-29, they worked for 11 hours and 59 minutes.
  Employee 2 did not work their hours and will be deducted.
Employee 3:
  Did not work in any session.
  Employee 3 did not work their hours and will be deducted.

Approach : 
- SELECT clause specifies the employee_id column to be selected in the result set.
- Performs a left join operation between the employees table (e) and the logs table (l) based on the employee_id column.
- Groups the result set by employee_id and needed_hours from the employees table.
- HAVING clause checks if the sum of the calculated hours worked (by subtracting in_time from out_time in seconds) divided by 60 (to convert to minutes) and further divided by 60 (to convert to hours) is less than the needed_hours for each employee.
- Sorts the result set in ascending order based on the employee_id column.

Solution : 

SELECT l.employee_id
FROM employees e 
JOIN logs l 
ON e.employee_id = l.employee_id
GROUP BY l.employee_id, needed_hours 
HAVING (SUM(CEIL(IFNULL(TIMESTAMPDIFF(second , in_time, out_time), 0)/ 60)) / 60) < needed_hours
ORDER BY l.employee_id;

